pub fn generate_map<'lifetime>() -> [&'lifetime str; 256]{
    
    let map: [&str; 256] = 
    [
        "#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#",".",".",".",".",".",".",".",".",".",".",".",".",".",".","#",
        "#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"
    ];

    return map;
    
}

